esphome:
    name: testhost
host:

logger: #0 bauds

api:
#^^^^^^^^^^^^^^^^^^^^^^^^ Remove and replace with autogen from esphome
# Here are the things you need to adjust for ha
switch:             
  - platform: homeassistant
    id: light_ha
    entity_id: light.wiz_rgbww_tunable_ad1dee
    internal: true
    
  - platform: template
    internal: false
    id: Screen_on      #Keep the screen on
    turn_on_action:
        - display.page.show: timemenu
        
sensor:
  - platform: homeassistant
    id: weather_temperature
    entity_id: weather.forecast_dom
    internal: true
  - platform: homeassistant
    id: inside_temperature
    entity_id: sensor.oled_control_living_room_temperature
    internal: true
    #more here
  - platform: wifi_signal # Reports the WiFi signal strength/RSSI in dB
    name: "WiFi Signal dB"
    id: wifi_signal_db
    update_interval: 5m
    entity_category: "diagnostic"
    
text_sensor:
  - platform: homeassistant
    entity_id: input_datetime.budzik 
    id: alarm_state
    internal: true
  - platform: homeassistant
    id: weather_temperature_unit
    entity_id: weather.forecast_dom
    attribute: temperature_unit
    internal: true
 

#^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Things from ha to adjust

script:  #Turns off screen after an interval, resets the timer every time it's called
  - id: oledoff_timer
    mode: restart
    then:
      - logger.log: "Timer fired!"
      - delay: 15s
      - if:
            condition:
                  switch.is_off: Screen_on
            then:
                - display.page.show: blank
            else:
                - display.page.show: timemenu  
      

font:
  - file: "gfonts://Roboto"
    id: small_font
    size: 14
    extras:
      - file: "gfonts://Roboto"
        glyphs: [ł,ś,Ł] #if you are using a foreign language or special characters, you have to add them here
  - file: "gfonts://BBH+Sans+Bogle"
    id: large_font
    size: 31
    
time:
  - platform: homeassistant
    id: esptime

i2c: # Replace with spi if using it
 - id: bus_oled
   sda: GPIO8
   scl: GPIO9
# Display and Pages
display:
    i2c_id: bus_oled
    model: "SSD1306 128x64"
    address: 0x3C
    id: oled_display
    update_interval: 100ms
    pages:
      - id: timemenu
        lambda: |-
          // Print time until alarm in top center
          it.printf(0, 0, id(small_font), TextAlign::TOP_CENTER, "Alarm: %s", id(alarm_state).state.c_str());

          // Print time in HH:MM format
          it.strftime(0, 60, id(large_font), TextAlign::BASELINE_LEFT, "%H:%M", id(esptime).now());

          // Print inside temperature
          if (id(inside_temperature).has_state()) {
            it.printf(127, 23, id(small_font), TextAlign::TOP_RIGHT , "%.1f", id(inside_temperature).state);
          }
          // Print outside temperature (from homeassistant weather)
          if (id(weather_temperature).has_state()) {
            it.printf(127, 60, id(medium), TextAlign::BASELINE_RIGHT , "%.1f%s",
                      id(weather_temperature).state, id(weather_temperature_unit).state.c_str());
          }


      - id: blank
        lambda: |-
          it.print(0, 10, id(small_font), "");
      
# GUI menu entry FILL FOR PROD
graphical_display_menu:
  id: menu
  display: oled_display
  on_redraw:
    then:
      component.update: oled_display
  active: false
  mode: joystick
  font: small_font
  items:    
  #~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Menu items to adjust
    - type: command
      text: !lambda |-
        char buffer[6];
        auto time = id(esptime).now();
        if (time.is_valid()) {
          time.strftime(buffer, sizeof(buffer), "%H:%M");
          return std::string(buffer);
        } else {
          return std::string("Time unavail-");
        }
      on_value:
         then:
           - display.page.show: timemenu

    - type: command
      text: "Zasłony"
      on_value:
        then:
          - homeassistant.action:
              action: cover.toggle
              entity_id: cover.pico_zaslony
           
    - type: switch
      immediate_edit: true
      text: 'Swiatło'
      on_text: 'WŁ'
      off_text: 'WYŁ'
      switch: light_ha
           
    - type: command
      text: 'Uśpij'
      on_value:
         then:
           - display.page.show: blank

    - type: menu
      text: 'Budzik'
      on_enter:
        then:
          lambda: 'ESP_LOGI("display_menu", "enter: %s", it->get_text().c_str());'
      on_leave:
        then:
          lambda: 'ESP_LOGI("display_menu", "leave: %s", it->get_text().c_str());'
      items:
        - type: back
          text: 'Back'
        - type: command
          text: 'Ustaw na 6:30'
          on_value:
            then:
             - homeassistant.service:
                service: input_datetime.set_datetime
                data:
                  entity_id: input_datetime.budzik
                  time: "06:30:00"
    - type: label
      text: 'Insert Wifi strength here'



    - type: menu
      text: 'Ustawienia'
      on_enter:
        then:
          lambda: 'ESP_LOGI("display_menu", "enter: %s", it->get_text().c_str());'
      on_leave:
        then:
          lambda: 'ESP_LOGI("display_menu", "leave: %s", it->get_text().c_str());'
      items:
        - type: back
          text: 'Back'
                 
        - type: command
          text: '!Restart!'
          on_value:
             then:
               - button.press: restart_but
        - type: command
          text: 'Ustaw na 5:30'
          on_value:
            then: 
              - homeassistant.action:
              #fill with action

# Input keys CHANGE FOR PRODUCTION
binary_sensor:
  - platform: sdl   #UP
    id: key_up
    key: SDLK_a
    on_press:
      then:
        - script.execute: oledoff_timer
        - if:
            condition:
                or:
                - display.is_displaying_page: blank
                - display.is_displaying_page: timemenu                
            then:
              - display_menu.show: menu
            else:
              - display_menu.up: menu

  - platform: sdl #DOWN
    id: key_down
    key: SDLK_s
    on_press:
      then:
        - script.execute: oledoff_timer
        - if:
            condition:
                or:
                - display.is_displaying_page: blank
                - display.is_displaying_page: timemenu                
            then:
              - display_menu.show: menu
            else:
              - display_menu.down: menu
            
  - platform: sdl #Enter
    id: key_right
    key: SDLK_f
    on_press:
      then:
        - script.execute: oledoff_timer
        - if:
            condition:
                or:
                - display.is_displaying_page: blank
                - display.is_displaying_page: timemenu                
            then:
              - display_menu.show: menu
            else:
              - display_menu.enter: menu
              
  - platform: sdl #Special button that cycles beetwen timemenu and screen off
    id: key_cycle
    key: SDLK_d
    on_press:
      then:
      - if:
          condition:
              or: 
              - display.is_displaying_page: blank
                display_menu.is_active: menu
          then:
            - display.page.show: timemenu
          else:
            - display.page.show: blank


button: # Buttons for HA

  - platform: restart
    id: but_restart
    name: Restart
    internal: false   #Set to true to disable restart button in HA     

  - platform: template
    name: UP Key
    id: but_up
    on_press:
      then:
        - script.execute: oledoff_timer
        - if:
            condition:
                or:
                - display.is_displaying_page: blank
                - display.is_displaying_page: timemenu                
            then:
              - display_menu.show: menu
            else:
              - display_menu.up: menu



  - platform: template
    name: Down Key
    id: but_down
    on_press:
      then:
        - script.execute: oledoff_timer
        - if:
            condition:
                or:
                - display.is_displaying_page: blank
                - display.is_displaying_page: timemenu                
            then:
              - display_menu.show: menu
            else:
              - display_menu.down: menu
              
  - platform: template
    name: Enter Key
    id: but_Enter
    on_press:
      then:
        - script.execute: oledoff_timer
        - if:
            condition:
                or:
                - display.is_displaying_page: blank
                - display.is_displaying_page: timemenu                
            then:
              - display_menu.show: menu
            else:
              - display_menu.enter: menu
