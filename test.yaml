esphome:
    name: testhost

host:

logger:
api:

      
substitutions:
  display_timeout: "30"

# Globals (all initial values are strings)
globals:
  - id: display_on
    type: bool
    restore_value: "false"
    initial_value: "false"
  - id: menu_active
    type: bool
    restore_value: "false"
    initial_value: "false"
  - id: menu_index
    type: int
    restore_value: "false"
    initial_value: "0"
  - id: fake_hour
    type: int
    restore_value: "false"
    initial_value: "12"
  - id: fake_minute
    type: int
    restore_value: "false"
    initial_value: "0"
  - id: alarm_hour
    type: int
    restore_value: "false"
    initial_value: "7"
  - id: alarm_minute
    type: int
    restore_value: "false"
    initial_value: "30"
  - id: lights_on
    type: bool
    restore_value: "false"
    initial_value: "false"
  - id: blinds_open
    type: bool
    restore_value: "false"
    initial_value: "false"
   # <- temporary for testing

# Fonts
font:
  - file: "arial.ttf"
    id: small_font
    size: 12
  - file: "arial.ttf"
    id: large_font
    size: 20

# SDL Display
display:
  - platform: sdl
    id: oled_display
    dimensions:
      width: 128
      height: 64
    update_interval: 500ms
    lambda: |-
      if (!id(display_on)) return;

      // Fill the background so old frames are cleared
      it.fill({0, 0, 0});      // Black

      if (!id(menu_active)) {
        // Idle screen: time + alarm
        it.printf(0, 0, id(large_font), "%02d:%02d", id(fake_hour), id(fake_minute));
        it.printf(0, 40, id(small_font), "Next: %02d:%02d", id(alarm_hour), id(alarm_minute));
      } else {
        // Menu screen
        const char *menu_items[] = {"Lights", "Blinds", "Alarm"};
        for (int i = 0; i < 3; i++) {
          if (i == id(menu_index)) it.printf(0, i * 20, id(small_font), "> %s", menu_items[i]);
          else it.printf(10, i * 20, id(small_font), "%s", menu_items[i]);
        }

        // Show submenu info
        if (id(menu_index) == 0) it.printf(0, 60, id(small_font), "State: %s", id(lights_on) ? "ON" : "OFF");
        else if (id(menu_index) == 1) it.printf(0, 60, id(small_font), "State: %s", id(blinds_open) ? "OPEN" : "CLOSED");
        else if (id(menu_index) == 2) it.printf(0, 60, id(small_font), "Alarm: %02d:%02d", id(alarm_hour), id(alarm_minute));
      }


# Interval: merged clock + auto-timeout
interval:
  - interval: 1s
    then:
      - lambda: |-
          static int idle_counter = 0;
          if(id(display_on)) {
            idle_counter++;
            if(idle_counter > atoi("${display_timeout}")) {
              id(display_on) = false;
              id(menu_active) = false;
              idle_counter = 0;
            }
          } else idle_counter = 0;
  - interval: 60s
    then:
      - lambda: |-
          id(fake_minute)++;
          if(id(fake_minute) >= 60) { id(fake_minute)=0; id(fake_hour)++; }
          if(id(fake_hour) >= 24) id(fake_hour)=0;

# SDL keys
binary_sensor:
  - platform: sdl
    id: key_up
    key: SDLK_a
    on_press:
      then:
        - script.execute: handle_key_up
  - platform: sdl
    id: key_down
    key: SDLK_s
    on_press:
      then:
        - script.execute: handle_key_down
  - platform: sdl
    id: key_left
    key: SDLK_d
    on_press:
      then:
        - script.execute: handle_key_left
  - platform: sdl
    id: key_right
    key: SDLK_f
    on_press:
      then:
        - script.execute: handle_key_right

# Scripts for navigation and submenu actions
script:
  - id: handle_key_up
    then:
      - lambda: |-
          id(display_on)=true;
          if(id(menu_active)) id(menu_index)=(id(menu_index)-1+3)%3;
          else id(menu_active)=true;
  - id: handle_key_down
    then:
      - lambda: |-
          id(display_on)=true;
          if(id(menu_active)) id(menu_index)=(id(menu_index)+1)%3;
          else id(menu_active)=true;
  - id: handle_key_left
    then:
      - lambda: |-
          id(display_on)=true;
          if(!id(menu_active)) id(menu_active)=true;
          else {
            if(id(menu_index)==0) id(lights_on)=!id(lights_on);
            else if(id(menu_index)==1) id(blinds_open)=!id(blinds_open);
            else if(id(menu_index)==2) {
              id(alarm_minute)-=5;
              if(id(alarm_minute)<0) { id(alarm_minute)+=60; id(alarm_hour)--; if(id(alarm_hour)<0) id(alarm_hour)=23; }
            }
          }
  - id: handle_key_right
    then:
      - lambda: |-
          id(display_on)=true;
          if(!id(menu_active)) id(menu_active)=true;
          else {
            if(id(menu_index)==0) id(lights_on)=!id(lights_on);
            else if(id(menu_index)==1) id(blinds_open)=!id(blinds_open);
            else if(id(menu_index)==2) {
              id(alarm_minute)+=5;
              if(id(alarm_minute)>=60) { id(alarm_minute)-=60; id(alarm_hour)++; if(id(alarm_hour)>=24) id(alarm_hour)=0; }
            }
          }
